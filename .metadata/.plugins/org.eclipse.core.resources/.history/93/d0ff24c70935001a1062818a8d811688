package com.springboothibernate.security;

import org.springframework.context.annotation.Bean;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.security.crypto.password.NoOpPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;

import net.bytebuddy.agent.builder.AgentBuilder.InitializationStrategy.NoOp;
import net.sf.ehcache.search.expression.And;


@EnableWebSecurity

public class SecurityConfiguration extends WebSecurityConfigurerAdapter {

	@Override
	protected void configure(AuthenticationManagerBuilder auth) throws Exception {
		 
		auth.inMemoryAuthentication()
		
		.withUser("Anshu")
		.password("Mishra")
		.roles("USER")
		.and()
		.withUser("Rahul")
		.password("Sharma")
		.roles("ADMIN");
		
		
	}
	
	@Bean
	public PasswordEncoder getPassword()
	{
		return NoOpPasswordEncoder.getInstance();
	}
	
	
	@Override
	protected void configure(HttpSecurity http) throws Exception {
		 
		http.authorizeRequests()
		.antMatchers("/**").hasRole("USER")
		.and().formLogin();
	}
	

}
